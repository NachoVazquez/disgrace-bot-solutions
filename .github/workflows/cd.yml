name: CD

on:
  push:
    branches: [master]

env:
  NODE_VERSION: '12.x' # set this to the node version to use

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: copy discord bot secrets
        run: yarn nx affected --target=cloud-config --DisgraceBotToken=${{ secrets.DisgraceBotToken}} --ROLLBAR_TOKEN=${{ secrets.ROLLBAR_TOKEN}} --base=$(git rev-parse HEAD~1) --parallel
      - name: npm install, build, and test
        run: |
          # Build and test the project, then
          # deploy to Azure Web App.
          yarn
          yarn nx affected --target=build --base=$(git rev-parse HEAD~1) --parallel
          yarn nx affected --target=test --base=$(git rev-parse HEAD~1) --parallel
          yarn nx affected --target=pre-deploy --base=$(git rev-parse HEAD~1) --parallel
      - name: Store Affected apps
        id: affected_apps
        run: echo "::set-output name=AffectedApps::$(npx nx affected:apps --base=$(git rev-parse HEAD~1) --plain)"
      - name: 'Build and Push to DockerHub'
        if: contains(steps.affected_apps.outputs.AffectedApps, 'disgrace-bot')
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DockerUsername }}
          password: ${{ secrets.DockerPassword }}
          repository: dbots/dbots
          tag_with_ref: true
          path: dist/apps/disgrace-bot
